apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "dev.olog.msc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            useProguard true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }

        debug {
            minifyEnabled false
            useProguard false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
//            debuggable false
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
        }
    }


    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.assets.srcDirs = ['src/main/assets']
        debug.assets.srcDirs = ['src/debug/assets']
        debug.res.srcDirs = ['src/debug/res']
    }

    kapt {
        javacOptions {
            option("-Xmaxerrs", 500)
            correctErrorTypes = true
        }
    }
}

dependencies {
    implementation project(':core')

    implementation project(':jaudiotagger')
    implementation project(':traceur')
    implementation project(':tap-target-view')

    implementation project(':shared')
    implementation project(':shared-ui-components')
    implementation project(':offline-lyrics')
    implementation project(':image-provider')

    implementation project(':api-lastfm')

    implementation project(':data')

    implementation project(':service-music')
    implementation project(':service-floating-window')

    implementation project(':app-widgets')
    implementation project(':app-shortcuts')

    implementation project(':pro')
    implementation project(':presentation-base')
    implementation project(':presentation-navigator')
    implementation project(':presentation-search')
    implementation project(':presentation-offline-lyrics')
    implementation project(':presentation-equalizer')
    implementation project(':presentation-edit-item')
    implementation project(':presentation-home')
    implementation project(':presentation-player')
    implementation project(':presentation-player-mini')
    implementation project(':presentation-sleep-timer')
    implementation project(':presentation-tabs')
    implementation project(':presentation-tabs-folder-tree')
    implementation project(':presentation-categories')
    implementation project(':presentation-detail')

    // data binding
    kapt librariesUi.dataBinding

    // kotlin
    implementation librariesCore.kotlin

    // google architecture components
    implementation librariesCore.lifecycleRuntime
    implementation librariesCore.lifecycleExtensions
    implementation librariesCore.lifecycleJava8
    implementation librariesCore.lifecycleRx

    // support
    implementation librariesAndroidX.core
    implementation librariesAndroidX.coreKtx
    implementation librariesAndroidX.legacyV4
    implementation librariesAndroidX.appcompat
    implementation librariesAndroidX.media
    implementation librariesAndroidX.mediaRouter
    implementation librariesAndroidX.recycler
    implementation librariesAndroidX.cardview
    implementation librariesAndroidX.browser
    implementation librariesAndroidX.material
    implementation librariesAndroidX.preference
    implementation librariesAndroidX.palette
    implementation librariesUi.constraintLayout

    // dagger
    implementation librariesCore.dagger
    kapt librariesCore.daggerProcessor
    implementation librariesCore.daggerAndroid
    implementation librariesCore.daggerAndroidSupport
    kapt librariesCore.daggerAndroidProcessor

    // rx
    implementation librariesCore.rxJava
    implementation librariesCore.rxAndroid
    implementation librariesCore.rxKotlin
    implementation librariesCore.rxBinding
    debugImplementation librariesCore.rxLint

    implementation librariesUi.slidingPanel
    implementation librariesUi.lottie

    implementation librariesUi.glide
    kapt librariesUi.glideProcessor
    // mandatory for glide compatibility
    kapt librariesUi.androidSupportAnnotation

    implementation librariesUtils.fuzzywuzzy
    implementation librariesUtils.aesCrypto
    implementation librariesUtils.customTabs
    implementation librariesUi.materialDialogsCore
    implementation librariesUi.materialDialogsColor
    implementation librariesUi.blurkit

    // debug
    debugImplementation librariesDebug.leakCanary
    debugImplementation librariesDebug.leakCanarySupport
    releaseImplementation librariesDebug.leakCanaryStub
//    debugImplementation librariesDebug.stetho

    // firebase
    implementation librariesFirebase.core
    implementation(librariesFirebase.crashlytics) {
        transitive = true
    }

    testImplementation "junit:junit:$rootProject.junit"
    testImplementation "org.mockito:mockito-core:$rootProject.mockito"
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

// leave at bottom
apply plugin: 'com.google.gms.google-services'
