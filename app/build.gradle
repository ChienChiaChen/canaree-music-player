apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "dev.olog.msc"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            useProguard true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }

        debug {
            minifyEnabled false
            useProguard false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
//            debuggable false
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
        }
    }



    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.assets.srcDirs = ['src/main/assets']
        debug.assets.srcDirs = ['src/debug/assets']
        debug.res.srcDirs = ['src/debug/res']
    }

    kapt {
        javacOptions {
            option("-Xmaxerrs", 500)
            correctErrorTypes = true
        }
    }
}

dependencies {
    implementation project(':core')
    implementation project(':data')
    implementation files('libs/jaudiotagger-android-2.2.3.jar')

    // data binding
    kapt "androidx.databinding:databinding-compiler:$gradle_plugin"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // google architecture components
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$rootProject.lifecycle"

    // support
    implementation "androidx.core:core:1.0.1"
    implementation "androidx.core:core-ktx:1.0.1"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.androidX"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.media:media:1.0.1"
    implementation "androidx.mediarouter:mediarouter:$rootProject.androidX"
    implementation "androidx.recyclerview:recyclerview:$rootProject.androidX"
    implementation "androidx.cardview:cardview:$rootProject.androidX"
    implementation "androidx.browser:browser:$rootProject.androidX"
    implementation "com.google.android.material:material:$rootProject.androidX"
    implementation "androidx.legacy:legacy-preference-v14:$rootProject.androidX"
    implementation "androidx.palette:palette:$rootProject.androidX"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraint_layout"

    // billing
    implementation "com.android.billingclient:billing:$rootProject.billing"

    // db
    implementation "com.squareup.sqlbrite3:sqlbrite:$rootProject.sql_brite"
    implementation "androidx.room:room-runtime:$rootProject.room"
    kapt "androidx.room:room-compiler:$rootProject.room"
    implementation "androidx.room:room-rxjava2:$rootProject.room"

    // dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rx_java"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rx_kotlin"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rootProject.rx_preferences"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rx_binding"
    debugImplementation "nl.littlerobots.rxlint:rxlint:$rootProject.rx_lint"

    // other
    implementation "com.sothree.slidinguppanel:library:$rootProject.sliding_panel"
    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.0'
//    implementation project(':exoplayer-library-core')
//    implementation project(':exoplayer-extension-flac')
//    implementation project(':exoplayer-extension-opus')
//    implementation project(':exoplayer-extension-ffmpeg')
    implementation "com.airbnb.android:lottie:$rootProject.lottie"

    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"
    kapt 'com.android.support:support-annotations:28.0.0'

    implementation "me.xdrop:fuzzywuzzy:$rootProject.fuzzywuzzy"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ok_http"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ok_http"
    implementation "com.github.dmstocking:support-optional:$rootProject.optional_lib"
    implementation "com.github.tozny:java-aes-crypto:$rootProject.aes_crypto"
    implementation "de.u-mass:lastfm-java:$rootProject.last_fm_binding"
    implementation "saschpe.android:customtabs:$rootProject.custom_tabs"
    implementation "com.afollestad.material-dialogs:core:$rootProject.material_dialogs"
    implementation "com.afollestad.material-dialogs:color:$rootProject.material_dialogs"
    implementation 'io.alterac.blurkit:blurkit:1.0.0'

    // debug
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leak_canary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leak_canary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leak_canary"

//    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    // firebase
    implementation "com.google.firebase:firebase-core:$rootProject.firebase"
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlytics") {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-invites:16.1.1'

    testImplementation "junit:junit:$rootProject.junit"
    testImplementation "org.mockito:mockito-core:$rootProject.mockito"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

// leave at bottom
apply plugin: 'com.google.gms.google-services'
